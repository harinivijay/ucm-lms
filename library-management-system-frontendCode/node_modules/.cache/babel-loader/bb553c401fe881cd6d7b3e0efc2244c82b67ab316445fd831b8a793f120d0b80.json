{"ast":null,"code":"var _jsxFileName = \"/Users/harinismac/Documents/Fall 2024 Subjects/Adv DBMS/Project/library-management-system-frontend/src/routes/ProtectedRoute.js\";\n// ProtectedRoute.jsx\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../../services/Authservice'; // Assuming isAuthenticated function is in your Authservice\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  ...rest\n}) => {\n  // Check if the user is authenticated (e.g., if a token exists)\n  const isUserAuthenticated = isAuthenticated();\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: isUserAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 41\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","isAuthenticated","jsxDEV","_jsxDEV","ProtectedRoute","element","rest","isUserAuthenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harinismac/Documents/Fall 2024 Subjects/Adv DBMS/Project/library-management-system-frontend/src/routes/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.jsx\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../../services/Authservice';  // Assuming isAuthenticated function is in your Authservice\n\nconst ProtectedRoute = ({ element, ...rest }) => {\n  // Check if the user is authenticated (e.g., if a token exists)\n  const isUserAuthenticated = isAuthenticated();\n\n  return (\n    <Route\n      {...rest}\n      element={\n        isUserAuthenticated ? element : <Navigate to=\"/login\" replace />\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,eAAe,QAAQ,4BAA4B,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC/C;EACA,MAAMC,mBAAmB,GAAGN,eAAe,CAAC,CAAC;EAE7C,oBACEE,OAAA,CAACJ,KAAK;IAAA,GACAO,IAAI;IACRD,OAAO,EACLE,mBAAmB,GAAGF,OAAO,gBAAGF,OAAA,CAACH,QAAQ;MAACQ,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACC,EAAA,GAZIV,cAAc;AAcpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}